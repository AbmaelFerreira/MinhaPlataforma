version: '3'

services:
  database:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: 'db_minha_plataforma'
    ports:
      - "3306:3306"
    networks:
      - network_minha_plataforma


  php:
    container_name: php_minha_plataforma
    build:
        context: .
        args:
            PHP_VERSION: ${PHP_VERSION:-8.1}
            COMPOSER_VERSION: ${COMPOSER_VERSION:-latest}
    working_dir: /app
    entrypoint: sh ./docker/php/entrypoint.sh
    volumes:
      - .:/app:rw
      - ./docker/php/config/php.ini:/usr/local/etc/php/php.ini:rw
      - ./docker/php/config/php-cli.ini:/usr/local/etc/php/php-cli.ini:rw
    networks:
      - network_minha_plataforma


  nginx:
    depends_on:
      - php
    image: nginx:latest
    volumes:
      - ./public:/app/public
      - ./docker/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    networks:
      - network_minha_plataforma

volumes:
  db-data:
  var:
networks:
  network_minha_plataforma:











#version: '3'
#
#services:
####> doctrine/doctrine-bundle ###
#  database:
#    image: postgres:${POSTGRES_VERSION:-15}-alpine
#    environment:
##      POSTGRES_DB: ${POSTGRES_DB:-app}
#       POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
#       POSTGRES_USER: ${POSTGRES_USER:-app}
#
#    ports:
#      - 5432:5432
#
#    volumes:
#      - database_data:/var/lib/postgresql/data:rw
#      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
#      # - ./docker/db/data:/var/lib/postgresql/data:rw
####< doctrine/doctrine-bundle ###
#
#volumes:
####> doctrine/doctrine-bundle ###
#  database_data:
####< doctrine/doctrine-bundle ###
